# Run unit tests daily.
#
# This is different from container rebuilds, where the tests "gate" the new version. The last
# container is used, always. That means, failures for this workflow signal breakages that are
# unrelated to the actual container builds.
#
# This should help as an additional data source to diagnose issues when things "randomly fail
# everywhere". Tests running here are not affected by any changes. In all other cases, these tests
# run after a change:
#    - code changes on PRs
#    - after container rebuilds
#    - after merges
#
# Ideally, these tests run on the same hashes as the merge tests, and so help detect which
# differences actually matter for the breakage.
#
# Warning: This differs from the pull request tests, both steps and matrix. Don't copypaste.

name: Run validation tests daily
on:
  # 2 AM
  schedule:
    - cron: 0 2 * * *
  workflow_dispatch:

permissions:
  contents: read

jobs:
  matrix-builder:
    uses: ./.github/workflows/matrix-builder.yml

  unit-tests:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    # Don't run scheduled workflows on forks.
    if: github.event_name != 'schedule' || github.repository == 'rhinstaller/anaconda'
    needs: matrix-builder
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.matrix-builder.outputs.matrix) }}
        exclude:
          - variant: "rhel"
    env:
      CI_TAG: '${{ matrix.branch }}'
      # Always avoid using cache because cache is not correctly invalidated.
      CONTAINER_BUILD_ARGS: '--no-cache ${{ matrix.build-args }}'

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          ref: ${{ matrix.branch }}

      - name: Run tests in anaconda-ci container
        run: |
          # put the log in the output, where it's easy to read and link to
          make -f Makefile.am container-ci || { cat test-logs/test-suite.log; exit 1; }

      - name: Upload test and coverage logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: 'logs (${{ matrix.branch }})'
          path: test-logs/*

  rpm-tests:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    # Don't run scheduled workflows on forks.
    if: github.event_name != 'schedule' || github.repository == 'rhinstaller/anaconda'
    needs: matrix-builder
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.matrix-builder.outputs.matrix) }}
        exclude:
          - variant: "rhel"
    env:
      CI_TAG: '${{ matrix.branch }}'
      # Always avoid using cache because cache is not correctly invalidated.
      CONTAINER_BUILD_ARGS: '--no-cache ${{ matrix.build-args }}'

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          ref: ${{ matrix.branch }}

      - name: Run RPM tests in container
        run: make -f Makefile.am container-rpm-test

      - name: Upload test logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: 'logs-rpm-test (${{ matrix.branch }})'
          path: test-logs/*
